---
description: Enforce quality gates so Bugbot has a clear checklist
globs: ["**/*"]
alwaysApply: true
---

# QA Rules

## Pre-PR Checklist

* Always ensure CI (lint + tests) is green before requesting review
* Prefer small, focused PRs (<400 lines changed) for better Bugbot feedback
* Include reproduction steps or screenshots for UI changes
* Link issues and add labels (`bug`, `perf`, `security`) accordingly
* Never commit secrets (.env, keystore, GoogleService files). Use placeholders

## Code Quality

* Follow project architectural patterns (offline-first, service-oriented)
* Implement proper error handling with try/catch
* Use TypeScript strict typing; avoid `any`
* Write self-documenting code with clear variable names
* Apply early returns and guard clauses for cleaner code

## Testing Requirements

* Each PR must include or update tests for changed logic
* Keep unit tests fast and isolated
* Aim for >70% code coverage on critical paths
* Test offline functionality for emergency features
* Mock native modules (BLE, location, sensors) properly

## Security Requirements

* NEVER commit API keys, Firebase configs, or EEW WebSocket URLs
* Use expo-secure-store for sensitive data
* Sanitize ALL user inputs using `src/lib/sanitize.ts`
* Implement E2E encryption for mesh messages
* Follow threat model in `docs/threat-model/`

## Performance Considerations

* Minimize re-renders with React.memo() and useCallback
* Use FlatList optimization props for large lists
* Batch native bridge operations (BLE, sensors)
* Implement proper image compression and caching
* Profile performance before marking as "perf" label

## Emergency App Requirements

* Ensure offline functionality works for critical features
* Test disaster recovery scenarios
* Verify BLE mesh networking reliability
* Validate Earthquake Early Warning (EEW) integration
* Confirm military-grade security for sensitive operations

## Documentation

* Update README or feature docs when behavior changes
* Include CHANGELOG entry for user-visible changes
* Document breaking changes clearly
* Update i18n strings for any new user-facing text

## Bugbot Integration

* Use `@bugbot run` for manual review requests
* Bugbot will run automatically on PR creation
* Address Bugbot feedback promptly
* Mark resolved comments as reviewed

## Mobile-Specific

* Test on both iOS and Android
* Verify safe area handling on different devices
* Check permission flows work correctly
* Test with denied permissions (offline mode)
* Ensure proper accessibility labels
