name: AfetNet CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency: ci-${{ github.ref }}

jobs:
  # Code Quality Checks
  code-quality-and-linting:
    name: Code Quality & Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint --if-present
        continue-on-error: false

      - name: Run TypeScript check
        run: npm run typecheck --if-present

      - name: Run tests
        run: npm test --if-present -- --ci --reporters=default
        continue-on-error: false

  # Build Checks
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [code-quality-and-linting]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Web/Bundle check (optional)
        run: npm run build --if-present

  # iOS Build (Optional)
  ios-build-check:
    name: iOS Build Check
    runs-on: macos-latest
    needs: [build-verification]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node deps
        run: npm ci || npm install

      - name: Setup Ruby (for CocoaPods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: CocoaPods cache & install (Expo/React Native iOS)
        run: |
          cd ios
          pod repo update || true
          pod install --repo-update

      - name: Build iOS (smoke)
        run: echo "Skipping simulator build in CI smoke; pods installed"

  # Android Build (Optional)
  android-build-check:
    name: Android Build Check
    runs-on: ubuntu-latest
    needs: [build-verification]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Gradle wrapper verify
        run: |
          test -f android/gradlew && echo "gradlew exists" || echo "no gradlew (Expo managed)"

  # Release Check
  release-readiness:
    name: Release Readiness Check
    runs-on: ubuntu-latest
    needs: [ios-build-check, android-build-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci || npm install

      - name: Changelog/Version check (optional)
        run: |
          node -e "console.log('Version:', require('./package.json').version)"

      - name: Upload release check report
        uses: actions/upload-artifact@v4
        with:
          name: release-check-report
          path: release-check-report.json
        if: always()

  # Deployment (Optional - for future use)
  deploy-to-stores:
    name: Deploy to TestFlight/App Store
    runs-on: macos-latest
    needs: [release-readiness]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # Note: Actual deployment would require Apple Developer account
      # and proper certificates. This is a placeholder for future implementation.
      - name: Prepare for deployment
        run: |
          echo "üöÄ Preparing for App Store deployment..."
          echo "‚úÖ Code quality checks passed"
          echo "‚úÖ Build verification passed"
          echo "‚úÖ Release readiness confirmed"
          echo "üìù Ready for App Store Connect submission"

      # Future: Add EAS build and submit steps
      # - name: Build with EAS
      #   run: eas build --platform all --profile production
      #
      # - name: Submit to TestFlight
      #   run: eas submit --platform ios
      #
      # - name: Submit to Play Store (Internal Testing)
      #   run: eas submit --platform android






