name: Security Audit

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run security audit
        run: |
          echo "🔍 Running npm audit..."
          npm audit --audit-level=moderate || true
          
          echo "🔍 Checking for known vulnerabilities..."
          npx audit-ci --config audit-ci.json || true

      - name: Check for hardcoded secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: Check dependencies for security issues
        run: |
          echo "🔍 Checking for outdated dependencies..."
          npm outdated || true
          
          echo "🔍 Checking for security advisories..."
          npx security-advisories || true

      - name: Upload security report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-report
          path: |
            npm-audit.json
            security-report.json
          retention-days: 30

      - name: Comment on PR with security findings
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            
            try {
              const auditResult = fs.readFileSync('npm-audit.json', 'utf8');
              const audit = JSON.parse(auditResult);
              
              if (audit.vulnerabilities && Object.keys(audit.vulnerabilities).length > 0) {
                const comment = `## 🚨 Security Audit Results
                
                **Vulnerabilities found:** ${Object.keys(audit.vulnerabilities).length}
                
                ### High Priority Issues:
                ${Object.entries(audit.vulnerabilities)
                  .filter(([name, vuln]) => vuln.severity === 'high')
                  .map(([name, vuln]) => `- **${name}**: ${vuln.title}`)
                  .join('\n')}
                
                ### Moderate Priority Issues:
                ${Object.entries(audit.vulnerabilities)
                  .filter(([name, vuln]) => vuln.severity === 'moderate')
                  .map(([name, vuln]) => `- **${name}**: ${vuln.title}`)
                  .join('\n')}
                
                Please review and fix these security issues before merging.`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              } else {
                const comment = `## ✅ Security Audit Results
                
                No security vulnerabilities found!`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.log('No security report found or error reading report:', error);
            }
